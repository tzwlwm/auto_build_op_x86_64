#
# Copyright (c) 2019-2021 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# File: .github/workflows/update-checker.yml
# Description: Source code update checker
#

name: Update Checker

env:
  REPO_URL_LEDE: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  REPO_URL_SSRPLUS: https://github.com/fw876/helloworld
  REPO_URL_PASSWALL: https://github.com/xiaorouji/openwrt-passwall
  REPO_BRANCH_PASSWALL: main

on:
  workflow_dispatch:
  schedule:
    - cron: 04 16 * * *

jobs:
  lede:
    runs-on: ubuntu-latest

    steps:

    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_LEDE -b $REPO_BRANCH .
        echo "::set-output name=commitHash::$(git rev-parse HEAD)"
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v2
      with:
        path: .commitHash
        key: HEAD-${{ steps.getHash.outputs.commitHash }}

    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash }} | tee .commitHash
    - name: Trigger build
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.RELEASES_TOKEN }}
        event-type: lede Source Code Update

  ssrplus:
    runs-on: ubuntu-latest

    steps:

    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_SSRPLUS -b $REPO_BRANCH .
        echo "::set-output name=commitHash::$(git rev-parse HEAD)"
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v2
      with:
        path: .commitHash
        key: HEAD-${{ steps.getHash.outputs.commitHash }}

    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash }} | tee .commitHash
    - name: Trigger build
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.RELEASES_TOKEN }}
        event-type: ssrplus Source Code Update

  passwall:
    runs-on: ubuntu-latest

    steps:

    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_PASSWALL -b $REPO_BRANCH_PASSWALL .
        echo "::set-output name=commitHash::$(git rev-parse HEAD)"
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v2
      with:
        path: .commitHash
        key: HEAD-${{ steps.getHash.outputs.commitHash }}

    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash }} | tee .commitHash
    - name: Trigger build
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.RELEASES_TOKEN }}
        event-type: passwall Source Code Update
