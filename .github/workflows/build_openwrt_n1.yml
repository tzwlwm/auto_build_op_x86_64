#=================================================
# Description: Build Phicomm N1 OpenWrt using GitHub Actions
# Lisence: MIT
# Author: mingxiaoyu
#=================================================

name: Build OpenWrt N1 ( Multiple )

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  DIY_SH: diy.sh
  TZ: Asia/Shanghai
  RELEASE: true
  
jobs:
  tagnamgjob:
    runs-on: ubuntu-latest
    outputs:
      tagnamgoutput: ${{ steps.setuptag.outputs.tagnamg }}

    steps:
    - id: setuptag
      run:  echo "::set-output name=tagnamg::$(date +%Y%m%d%H)"
 
  buildopenwrtjob:
    runs-on: ubuntu-18.04
    name: Build ${{ matrix.sub_version }} 
    strategy:
      fail-fast: false
      matrix:
        include:
          - sub_version: mini
            config_file: mini.config
          - sub_version: plus
            config_file: plus.config
    env:
        SUB_VERSION: ${{ matrix.sub_version }} 
        CONFIG_FILE: ${{ matrix.config_file }} 
    needs: tagnamgjob    
    steps:
    - name: Checkout
      uses: actions/checkout@main
    
    - name: Initialization Environment
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804) tree
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
        sudo mkdir -p /upload
        sudo chown $USER:$GROUPS /upload
        
        cd /upload
        echo "UPLOAD=$PWD" >> $GITHUB_ENV
        
        echo "tag_name=${{needs.tagnamgjob.outputs.tagnamgoutput}}" >> $GITHUB_ENV
   
    - name: Initialization Environment
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt 
        cd openwrt 
        
    - name: Update & Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: Load Custom Configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        [ -e files ] && mv files openwrt/files
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH 

    - name: Compile Firmware
      id: compile
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo -e "$(nproc) thread compile"
        
        make -j$(nproc) || make -j1 || make -j1 V=s
        
        cp .config ${UPLOAD}/${SUB_VERSION}.config
        cd bin/targets/*/*
        cp openwrt-armvirt-64-default-rootfs.tar.gz  ${UPLOAD}/openwrt-armvirt-64-default-rootfs-${SUB_VERSION}.tar.gz
        cp -r *.xz ${UPLOAD}/
        echo "::set-output name=status::success" 
        
    - name: Create release
      if: steps.compile.outputs.status == 'success' && env.RELEASE == 'true' && !cancelled()
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.DATE }} üöÄ / N1-Openwrt | ÁºñËØë
        allowUpdates: true
        tag: ${{ env.tag_name }}
        commit: master
        token: ${{ secrets.RELEASES_TOKEN  }}
        body: |
          ÂΩìÂâç‰ΩøÁî®ÁâàÊú¨:ÔºàÁºñËØëÂâçÁöÑÊúÄÂêé‰∏ÄÊ¨°Ê∫êÁ†ÅÊõ¥Êñ∞ËÆ∞ÂΩïÔºâ
        artifacts:  ${{ env.UPLOAD }}/*

  cleanjob:
    runs-on: ubuntu-latest
    needs: buildopenwrtjob
    steps:
    - name: Trigger package
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.RELEASES_TOKEN  }}
        repository: mingxiaoyu/N1imagebuilder
        event-type: Package N1 Image from N1Openwrt
        
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
